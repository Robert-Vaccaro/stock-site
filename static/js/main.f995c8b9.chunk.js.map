{"version":3,"sources":["Images/meme-stock-colleen.png","Components/NavBar/NavBar.js","Images/no-camera.png","Components/Landing/Landing.js","Components/Competition/Competition.js","Components/Rankings/Rankings.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","React","useState","setValue","mode","setMode","color","fontSize","fontWeight","textColors","setTextColors","onModeChange","event","newValue","localStorage","getItem","handleModeChange","setItem","useEffect","Box","className","src","image","Tabs","value","onChange","variant","textColor","indicatorColor","scrollButtons","allowScrollButtonsMobile","Tab","label","wrapped","sx","to","LinkComponent","Link","Button","backgroundColor","onClick","htmlColor","Landing","memes","setMemes","page","setPage","pageTotal","setPageTotal","setMemeClass","hideLoader","setHideLoader","width","padding","margin","styling","setStyling","getMemes","console","log","fetch","method","headers","body","JSON","stringify","username","startPoint","like","category","then","res","json","memeStateSet","catch","err","Math","ceil","bind","this","map","item","index","Card","profilePhoto","CardHeader","avatar","Avatar","bgcolor","height","title","subheader","Date","timeCreated","toLocaleString","CardMedia","component","url","alt","CardContent","Typography","CardActions","disableSpacing","IconButton","red","alreadyLiked","length","style","bottom","position","hidden","LinearProgress","Pagination","count","e","val","toString","Competition","styled","expand","other","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Rankings","users","setUsers","getUsers","memeUsers","level","exp","ratio","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f995c8b9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/meme-stock-colleen.8834e26a.png\";","import React, { useEffect, useState } from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport \"./NavBar.css\"\nimport image from \"../../Images/meme-stock-colleen.png\"\nimport {Link} from \"react-router-dom\"\nimport Button from '@mui/material/Button';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nexport default function NavBar(props) {\n  const [value, setValue] = React.useState(\"home\");\n  const [mode, setMode] = React.useState(\"light\");\n  const [textColors, setTextColors] = React.useState({color:\"black\", fontSize:18, fontWeight:700});\n  const onModeChange = (event, newValue) => {\n    if (localStorage.getItem(\"mode\") == \"dark\") {\n      setMode(\"light\")\n      props.handleModeChange(\"light\")\n      localStorage.setItem(\"mode\", \"light\")\n      setTextColors({color:\"black\", fontSize:18, fontWeight:700})\n    } else {\n      setMode(\"dark\")\n      props.handleModeChange(\"dark\")\n      localStorage.setItem(\"mode\", \"dark\")\n      setTextColors({color:\"white\", fontSize:18, fontWeight:700})\n    }\n    \n  };\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  useEffect(()=>{\n    if (localStorage.getItem(\"mode\") == null){\n      localStorage.setItem(\"mode\", \"light\")\n    }\n  },[mode]);\n  return (\n    <Box className={\"nav-box-\" + mode}>\n      <div className=\"meme-container\"><img className=\"meme-icon\" src={image} /></div>\n      <Tabs\n        value={props.value}\n        onChange={handleChange}\n        variant=\"scrollable\"\n        textColor=\"secondary\"\n        indicatorColor=\"secondary\"\n        scrollButtons\n        allowScrollButtonsMobile\n        aria-label=\"scrollable auto tabs example\"\n      >\n        <Tab\n          value=\"home\"\n          label=\"Home\"\n          wrapped\n          sx={textColors}\n          to=\"/\" LinkComponent={Link}\n        />\n        <Tab value=\"competition\" \n        label=\"Competiton\" \n        to=\"/competition\" \n        sx={textColors}\n        LinkComponent={Link} \n        />\n        <Tab value=\"rankings\" \n        label=\"Rankings\" \n        to=\"/rankings\" \n        sx={textColors}\n        LinkComponent={Link} \n        />\n      </Tabs>\n      {\n        localStorage.getItem(\"mode\") == \"dark\"?\n        <div className=\"mode-container\"><Button   sx={[\n          { backgroundColor:\"black\"},\n          {\n            '&:hover': {\n              backgroundColor: 'gray',\n            },\n          },\n        ]} variant=\"contained\" onClick={()=>onModeChange()}><LightModeIcon htmlColor={\"orange\"}/></Button></div>\n        :\n        <div className=\"mode-container\"><Button sx={[\n          { backgroundColor:\"black\"},\n          {\n            '&:hover': {\n              backgroundColor: 'gray',\n            },\n          },\n        ]}  variant=\"contained\" onClick={()=>onModeChange()}><DarkModeIcon htmlColor={\"white\"}/></Button></div>\n      }\n    </Box>\n  );\n}","export default __webpack_public_path__ + \"static/media/no-camera.7472f3d8.png\";","import React, { useEffect, useState } from \"react\"\nimport \"./Landing.css\"\nimport NavBar from \"../NavBar/NavBar.js\"\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport image from \"../../Images/no-camera.png\"\nimport Pagination from '@mui/material/Pagination';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\nfunction Landing() {\n    let [memes, setMemes] = useState([])\n    let [mode, setMode] = useState(\"light\")\n    let [page, setPage] = useState(\"0\")\n    let [pageTotal, setPageTotal] = useState(0)\n    let [memeClass, setMemeClass] = useState(\"fadeOut\")\n    let [hideLoader, setHideLoader] = useState(false)\n    let [styling, setStyling] = useState({ width: 345, padding: 1, margin: 1, backgroundColor:\"white\"}) \n    const [expanded, setExpanded] = React.useState(false);\n    const changePage = (e, val) => {\n      console.log(val-1)\n      setPage((val-1).toString())\n      setHideLoader(false)\n      setMemeClass(\"fadeOut\")\n      getMemes()\n    }\n    let handleModeChange = (mode) => {\n      setMode(mode)\n      if (mode == 'dark') {\n        setStyling({ width: 345, padding: 1, margin: 1, backgroundColor:\"black\"})\n      } else{\n        setStyling({ width: 345, padding: 1, margin: 1, backgroundColor:\"white\"})\n      }\n  }\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n    let memeStateSet = (res) => {\n      \n      setMemes(res)\n      setHideLoader(true)\n      setMemeClass(\"fadeIn\")\n    }\n    let getPageTotal = () => {\n\n      console.log(\"getPageTotal\")\n      \n        fetch('https://ancient-springs-47837.herokuapp.com/get-total-memes', {\n            method: 'post', \n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n             body: JSON.stringify({username: \"\",startPoint:page, like:\"\",category:\"\"})\n          }).then(res=>res.json())\n            .then(res => setPageTotal(Math.ceil(res[0]/25)))\n            .catch(err => console.log(err))\n    }\n    let getMemes = () => {\n\n      console.log(\"getMemes\")\n      \n        fetch('https://ancient-springs-47837.herokuapp.com/get-all-memes', {\n            method: 'post', \n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n             body: JSON.stringify({username: \"\",startPoint:page, like:\"\",category:\"\"})\n          }).then(res=>res.json())\n            .then(res => memeStateSet(res))\n            .catch(err => console.log(err))\n    }\n    useEffect(() => {\n      console.log(localStorage.getItem(\"mode\"))\n      getPageTotal()\n        getMemes()\n      }, [page]);// eslint-disable-line react-hooks/exhaustive-deps\n    \n  return (\n    <div className={\"landing-\" + mode}>\n      <NavBar value=\"home\" handleModeChange={handleModeChange.bind(this)}/>\n    {memes.map((item,index) => (\n    <Card  sx={styling} key={index}>\n\n        {\n            item.profilePhoto!==\"\"?\n            <CardHeader\n            avatar={\n              <Avatar src={item.profilePhoto} sx={{ bgcolor: \"white\", width: 56, height: 56,}} aria-label=\"recipe\">\n              </Avatar>\n            }\n            title={item.username}\n            subheader={\n                new Date(item.timeCreated * 1000).toLocaleString()\n                }\n          />\n          :\n          <CardHeader\n          avatar={\n            <Avatar src={image} sx={{ bgcolor: \"white\", width: 56, height: 56,}} aria-label=\"recipe\">\n            </Avatar>\n          }\n\n          title={item.username}\n          subheader={\n              new Date(item.timeCreated * 1000).toLocaleString()\n              }\n        />\n          }\n        \n\n\n\n\n      <CardMedia\n        className=\"meme-image\"\n        component=\"img\"\n        image={item.url}\n        alt=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon sx={{ color: red[500] }}/>\n          </IconButton>\n\n        <Typography>{item.alreadyLiked.length}</Typography>\n\n\n      </CardActions>\n      \n    </Card>\n    \n    ))}\n        <div style={{width:\"100%\", bottom: \"70px\", position: \"fixed\"}} hidden={hideLoader}>\n        <LinearProgress />\n    </div>\n  <div className={\"pagination-container-\"+mode}>\n  \n  <Pagination count={pageTotal} color=\"secondary\" onChange={changePage}/>\n  </div>\n\n    </div>\n  );\n}\n\nexport default Landing;\n","import React, { useEffect, useState } from \"react\"\nimport \"./Competition.css\"\nimport NavBar from \"../NavBar/NavBar.js\"\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport image from \"../../Images/no-camera.png\"\nimport Pagination from '@mui/material/Pagination';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\nfunction Competition() {\n    let [memes, setMemes] = useState([])\n    let [page, setPage] = useState(\"0\")\n    let [pageTotal, setPageTotal] = useState(0)\n    let [memeClass, setMemeClass] = useState(\"fadeOut\")\n    let [hideLoader, setHideLoader] = useState(false)\n    const [expanded, setExpanded] = React.useState(false);\n    const changePage = (e, val) => {\n      console.log(val-1)\n      setPage((val-1).toString())\n      setHideLoader(false)\n      setMemeClass(\"fadeOut\")\n      getMemes()\n    }\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n    let memeStateSet = (res) => {\n      \n      setMemes(res)\n      setHideLoader(true)\n      setMemeClass(\"fadeIn\")\n    }\n    let getPageTotal = () => {\n\n      console.log(\"getPageTotal\")\n      \n        fetch('https://ancient-springs-47837.herokuapp.com/get-total-memes', {\n            method: 'post', \n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n             body: JSON.stringify({username: \"\",startPoint:page, like:\"\",category:\"\"})\n          }).then(res=>res.json())\n            .then(res => setPageTotal(Math.ceil(res[0]/25)))\n            .catch(err => console.log(err))\n    }\n    let getMemes = () => {\n\n      console.log(\"getMemes\")\n      \n        fetch('https://ancient-springs-47837.herokuapp.com/get-all-champ-memes-v2', {\n            method: 'post', \n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n             body: JSON.stringify({username: \"\",startPoint:page, like:\"\",category:\"\"})\n          }).then(res=>res.json())\n            .then(res => memeStateSet(res))\n            .catch(err => console.log(err))\n    }\n    useEffect(() => {\n      console.log(\"inside useEffect\")\n      getPageTotal()\n        getMemes()\n      }, [page]);// eslint-disable-line react-hooks/exhaustive-deps\n    \n  return (\n    <div className=\"landing\">\n      <NavBar value=\"competition\"/>\n    {memes.map((item,index) => (\n    <Card  sx={{ width: 345, padding: 1, margin: 1 }} key={index}>\n\n        {\n            item.profilePhoto!==\"\"?\n            <CardHeader\n            avatar={\n              <Avatar src={item.profilePhoto} sx={{ bgcolor: \"white\", width: 56, height: 56,}} aria-label=\"recipe\">\n              </Avatar>\n            }\n            title={item.username}\n            subheader={\n                new Date(item.timeCreated * 1000).toLocaleString()\n                }\n          />\n          :\n          <CardHeader\n          avatar={\n            <Avatar src={image} sx={{ bgcolor: \"white\", width: 56, height: 56,}} aria-label=\"recipe\">\n            </Avatar>\n          }\n\n          title={item.username}\n          subheader={\n              new Date(item.timeCreated * 1000).toLocaleString()\n              }\n        />\n          }\n        \n\n\n\n\n      <CardMedia\n        className=\"meme-image\"\n        component=\"img\"\n        image={item.url}\n        alt=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon sx={{ color: red[500] }}/>\n          </IconButton>\n\n        <Typography>{item.alreadyLiked.length}</Typography>\n\n\n      </CardActions>\n      \n    </Card>\n    \n    ))}\n        <div style={{width:\"100%\", bottom: \"70px\", position: \"fixed\"}} hidden={hideLoader}>\n        <LinearProgress />\n    </div>\n  <div className=\"pagination-container\">\n  \n  <Pagination count={pageTotal} color=\"secondary\" onChange={changePage}/>\n  </div>\n\n    </div>\n  );\n}\n\nexport default Competition;\n","import React, { useEffect, useState } from \"react\"\nimport \"./Rankings.css\"\nimport NavBar from \"../NavBar/NavBar.js\"\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport image from \"../../Images/no-camera.png\"\nimport Pagination from '@mui/material/Pagination';\nimport LinearProgress from '@mui/material/LinearProgress';\nconst ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  }));\nfunction Rankings() {\n    let [users, setUsers] = useState([])\n    let [like, setLiked] = useState(false)\n    let [page, setPage] = useState(\"0\")\n    let [hideLoader, setHideLoader] = useState(false)\n    let [pageTotal, setPageTotal] = useState(0)\n    const [expanded, setExpanded] = React.useState(false);\n    const changePage = (e, val) => {\n        console.log(val-1)\n        setPage((val-1).toString())\n        setHideLoader(false)\n        getUsers()\n      }\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n    let memeUsers = (res) => {\n        setUsers(res)\n        setHideLoader(true)\n    }\n    let getPageTotal = () => {\n\n        console.log(\"getPageTotal\")\n        \n          fetch('https://ancient-springs-47837.herokuapp.com/get-total-users', {\n              method: 'post', \n              headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n              },\n               body: JSON.stringify({username: \"\",startPoint:page, like:\"\",category:\"\"})\n            }).then(res=>res.json())\n              .then(res => setPageTotal(Math.ceil(res[0]/25)))\n              .catch(err => console.log(err))\n      }\n    let getUsers = () => {\n        console.log(\"getUsers\")\n        setHideLoader(false)\n        fetch('https://ancient-springs-47837.herokuapp.com/get-memer-rankings-v2', {\n            method: 'post', \n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n             body: JSON.stringify({username: \"\",startPoint:page,like:\"\",category:\"\"})\n          }).then(res=>res.json())\n            .then(res => memeUsers(res))\n            .catch(err => console.log(err))\n    }\n    useEffect(() => {\n        getPageTotal()\n        getUsers()\n      }, [page]);// eslint-disable-line react-hooks/exhaustive-deps\n    \n  return (\n    <div className=\"rankings\">\n      <NavBar value=\"rankings\"/>\n    {users.map((item,index) => (\n    <Card sx={{ width: 345, padding: 1, margin: 1 }} key={index}>\n        {\n            item.profilePhoto!==\"\"?\n            <CardHeader\n            avatar={\n              <Avatar src={item.profilePhoto} sx={{ bgcolor: \"white\", width: 200, height: 200,}} aria-label=\"recipe\">\n              </Avatar>\n            }\n          />\n          :\n          <CardHeader\n          avatar={\n            <Avatar src={image} sx={{ bgcolor: \"white\", width: 200, height: 200,}} aria-label=\"recipe\">\n            </Avatar>\n          }\n        />\n        }\n\n\n      <CardContent>\n          <div>\n\n          </div>\n      <Typography variant=\"h3\" color=\"text.secondary\">\n      {item.username}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n            Rank: {index+1}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n            Memes Posted: {item.memes}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n            Level: {item.level}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n        Exp: {item.exp}/100\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n        Meme to Like Ratio: {item.ratio}%\n        </Typography>\n\n      </CardContent>\n    </Card>\n    ))}\n        <div style={{width:\"100%\", bottom: \"70px\", position: \"fixed\"}} hidden={hideLoader}>\n        <LinearProgress />\n    </div>\n  <div className=\"pagination-container\">\n  \n  <Pagination count={pageTotal} color=\"secondary\" onChange={changePage}/>\n  </div>\n\n    </div>\n  );\n}\n\nexport default Rankings;\n","import Landing from \"./Components/Landing/Landing.js\"\nimport Competition from \"./Components/Competition/Competition.js\"\nimport Rankings from \"./Components/Rankings/Rankings.js\"\nimport { Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <main>\n    <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path=\"competition\" element={<Competition />} />\n        <Route path=\"rankings\" element={<Rankings />} />\n    </Routes>\n  </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}